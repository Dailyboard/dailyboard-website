---
import Footer from '../sections/Footer.astro';

export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<!-- Google tag (gtag.js) -->
		<script async src="https://www.googletagmanager.com/gtag/js?id=G-SG37KNKHFJ"></script>
		<script>
			window.dataLayer = window.dataLayer || [];
			function gtag() {
				dataLayer.push(arguments);
			}
			gtag('js', new Date());

			gtag('config', 'G-SG37KNKHFJ');
		</script>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<meta property="og:title" content="Dailyboard - Daily planning tool for your team" />
		<meta property="og:site_name" content="Dailyboard" />
		<meta property="og:url" content="https://dailyboard.io" />
		<meta
			property="og:description"
			content="Dailyboard will help your team achieve daily goals, work in perfect sync and reach your full potential. Get early access today!"
		/>
		<meta property="og:type" content="website" />
		<meta
			property="og:image"
			content="https://res.cloudinary.com/dl5xtsolh/image/upload/v1696969204/dailyboard_link_image.jpg"
		/>
		<link rel="stylesheet" href="https://rsms.me/inter/inter.css" />
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
		<title>{title}</title>
	</head>
	<body class="bg-background text-text">
		<slot />
		<Footer />
	</body>
</html>

<style is:global></style>

<script>
	// @ts-ignore
	import MoveTo from 'moveto';

	const moveTo = new MoveTo();
	const triggers = document.querySelectorAll('[data-scroll]') as NodeListOf<HTMLElement>;
	const contactElement = document.getElementById('contact');

	if (contactElement) {
		for (const trigger of triggers) {
			moveTo.registerTrigger(trigger);
		}
	}

	const observer = new IntersectionObserver(
		(elements) => {
			elements.forEach((el) => {
				const animation = el.target.getAttribute('data-animate');
				const delayData = el.target.getAttribute('data-delay');
				const delay = delayData ? Number.parseInt(delayData) : 0;

				if (animation && el.isIntersecting) {
					setTimeout(() => {
						el.target.classList.add(animation);
						el.target.classList.remove('opacity-0');
					}, delay);
				}
			});
		},
		{ threshold: window.outerWidth > window.outerHeight ? 0.35 : 0.05 }
	);
	const elements = document.querySelectorAll('[data-animate]');
	elements.forEach((el) => {
		el.classList.add('opacity-0');
		observer.observe(el);
	});
</script>
